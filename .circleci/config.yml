# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference

# How to get started with pre-built Docker images on CircleCI
# https://www.youtube.com/watch?v=PgIwBzXBn7M

#Note: this probably lacks maturity
version: 2.1
commands:  
  back-end-run-command:
    steps:
      - run: #Configuration of Postgresql
            echo "Starting the database work"    &&     
            sudo rm -rf /var/lib/apt/lists/* &&
            sudo apt-get update &&        
            echo "********** Postgresql installation"  &&
            sudo apt-get -y install postgresql &&
            sudo -u postgres psql  \n CREATE $DB_USERNAME WITH ENCRYPTED PASSWORD $DB_PASSWORD; CREATE DATABASE $DB_NAME OWNER $DB_USERNAME; \q &&
            echo "********** Database should have been created";               




            #postgres -D/var/lib/postgresql/9.6/main
            #psql -d $TEST_DATABASE_URL -c "CREATE TABLE test (name CHAR(25));"
           

            
            #pg_ctlcluster 12 main start  
            #&& sudo -u postgres psql
            #&& DROP DATABASE $DB_NAME;
            #&& 
            
            # && git  clone https://github.com/jlmacle/AccessibleTodoList_Backend.git && cd AccessibleTodoList_Backend
            #  && psql -v  && mvn spring-boot:run

            #/usr/lib/postgresql/12/bin/initdb -D /var/lib/postgresql/12/main --auth-local peer --auth-host md5
            #The files belonging to this database system will be owned by user "postgres".

executors:
  back-end-executor:
    docker:
      # primary container
      # https://hub.docker.com/u/circleci/
      - image: circleci/openjdk            
        environment:
          TEST_DATABASE_URL: $DB_TEST_URL
          #https://www.postgresql.org/docs/9.0/libpq-envars.html
               

jobs: 
  back-end-run-job:     
    executor: back-end-executor
    steps: 
      #- restore_cache:
      #    keys:
      #      - app-cache
      - back-end-run-command   
      #- save_cache:
      #    paths:
      #      - "./"
      #    key: 
      #    app-cache

workflows: 
  back-end-run-workflow: 
    jobs:      
      - back-end-run-job          
        